I"S<java> 检测字符串两个是否相等 -- 字符串的equals方法<br />

----

```java

字符串A.equals(字符串B)

// 字符串既可以是字面量也可以是变量

```

如果不区分大小写的比较, 使用字符串的equalsIgnoreCase方法<br />

```java

字符串A.equalsIgnoreCase(字符串B)

```

注意: 不要使用 == 来比较字符串是否相等, == 只能比较字符串是否在同一个位置(引用地址), 如果两个相同内容的字符串放在不同位置, 那比较的结果恒为false<br />



<java> 检查空字符串<br />

----

空字符串 "" 长度0 内容空

```java

if (str.length() == 0)  // 长度是否为0

或者

if (str.equals(""))  // 是否和""相等

```

<java> 检查Null串

----

```java

if (str == null)

```

<java> 检查既不为空也不为Null

----

```java

// 先判断Null 后判断空

if (str != null &amp;&amp; str.length() != 0)

```

<java> 成员变量和局部变量

----

1. 定义的位置不同:<br />

    成员变量定义在类内部方法外部,

    局部变量定义在方法内部

2. 作用范围不同:<br />

    局部变量作用于方法, 成员变量整个类中都能使用

3. 默认值不同:<br />

    成员变量有默认值, 而局部变量没有默认值,必须初始化才能使用<br />

4. 内存中的位置不同:<br />

    局部变量位于**栈**内存, 成员变量位于**堆**内存<br />

5. 生命周期不同:<br />局部变量进栈而生, 出栈而死; 成员变量跟随**对象**创建和消亡<br />



成员变量和局部变量重名, 根据就近原则, 优先使用局部变量<br />

访问本类的成员变量, 使用this. 这样就可以区分同名的成员变量和局部变量了<br />

谁调用的方法, 谁就是this<br />



<java> 只有java.lang下的内容不需要导包

----


</java></java></java></java></java></java>
:ET
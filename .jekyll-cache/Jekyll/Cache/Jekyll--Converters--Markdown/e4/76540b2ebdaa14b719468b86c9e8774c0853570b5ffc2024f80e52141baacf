I"/<p>在Linux操作系统中配置网络的方法有很多种<br /></p>

<h3 id="使用nmtui命令配置网络">使用nmtui命令配置网络</h3>
<p>nmtui - Text User Interface for controlling NetworkManager<br />
nmtui是一个TUI工具, 也就是文本用户界面, 通过固定格式的文本来交互式的实现相关配置<br /></p>
<ol>
  <li>选择 Edit a connection</li>
  <li>找到网卡 选择 Edit</li>
  <li>把IPv4的配置方式换成Manual(手动)</li>
  <li>选择Show 显示配置框</li>
  <li>输入静态IP地址和mask 网关地址 DNS等等</li>
  <li>选择OK保存配置</li>
  <li>Quit退出</li>
</ol>

<p>确保网卡为激活状态: <code class="language-plaintext highlighter-rouge">vim /etc/sysconfig/network-scripts/ifcfg-网卡设备名</code><br />
<code class="language-plaintext highlighter-rouge">ONBOOT=yes</code><br />
做完后重启网络服务: <code class="language-plaintext highlighter-rouge">systemctl restart network</code><br /></p>

<h3 id="使用nmcli命令配置网络">使用nmcli命令配置网络</h3>
<p>nmcli是一个命令行网络管理工具<br />
也是用来管理 Network Manager这个服务的<br /></p>

<p>查看网络信息/网络状态: <code class="language-plaintext highlighter-rouge">nmcli connection show | nmcli con show 网卡名</code><br /></p>

<p>网络会话: 根据使用场景切换网络配置<br /></p>
<ul>
  <li>工作/家 不同网络使用不同会话, 不需要每次都重新配置IP地址</li>
</ul>

<p>用nmcli创建网络会话: <code class="language-plaintext highlighter-rouge">nmcli connection add con-name type ifname</code><br />
假设想要创建一个在家用的网络配置home<br /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmcli connection add con-name home ifname 网卡名称 autoconnect no type ethernet ip4 IP地址 gw4 网关地址 
</code></pre></div></div>
<ul>
  <li>autoconnect no - 默认不会自动激活</li>
  <li>如果想用DHCP动态IP, 则不配置静态IP即可</li>
</ul>

<p>查看创建的所有网络会话: <code class="language-plaintext highlighter-rouge">nmcli connection show</code><br /></p>

<p>注意: 配置过的网络会话是永久生效的<br /></p>

<p>启用网络会话: <code class="language-plaintext highlighter-rouge">nmcli connection up 会话名</code><br /></p>

<h3 id="网卡绑定">网卡绑定</h3>
<p>网卡绑定技术, 既可以提高网络传输速度, 又可以提供自动融灾顶替, 提高网络的可用性<br /></p>
<ol>
  <li>确保2块网络在同一个网络中, 能够互相传输数据</li>
  <li>修改2块网卡配置文件, 配置主从, <code class="language-plaintext highlighter-rouge">SLAVE=yes</code>, <code class="language-plaintext highlighter-rouge">Master=bond0</code>
    <ul>
      <li>两块网卡都是从, 服务于我们创建的逻辑网卡bond0</li>
      <li>从属网卡不再拥有自己的IP地址等网络信息
        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>TYPE=Ethernet
BOOTPROTO=none
ONBOOT=yes
USERCTL=no
DEVICE=网卡名
MASTER=bond0
SLAVE=yes
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li>创建主网卡bond0的配置文件<code class="language-plaintext highlighter-rouge">vim /etc/sysconfig/network-scripts/ifcfg-bond0</code>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>TYPE=Ethernet
BOOTPROTO=none
ONBOOT=yes
USERCTL=no
DEVICE=bond0
IPADDR=IPv4地址
PREFIX=24(mask)
DNS=DNS地址
NM_CONTROLLED=no
</code></pre></div>    </div>
  </li>
  <li>让内核支持网卡绑定驱动, 创建一个用于网卡绑定的驱动文件
    <ul>
      <li><code class="language-plaintext highlighter-rouge">vim /etc/modprobe.d/bond.conf</code>
        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alias bond0 bonding
options bond0 miimon=100 mode=6
</code></pre></div>        </div>
      </li>
      <li>驱动模式mode6, 自动切换时间100毫秒</li>
    </ul>
  </li>
  <li>重启网络服务 <code class="language-plaintext highlighter-rouge">systemctl restart network</code></li>
</ol>

<p>常见的网卡绑定驱动模式:<br /></p>
<blockquote>
  <p>mode0 平衡负载 : 平时2块网卡都工作, 而且自动备援, 但是需要交换机端口聚合来支持绑定技术<br />
mode1 自动备援 : 平时1块网卡工作, 故障后自动替换为另一块<br />
mode6 平衡负载 : 平时2块网卡都工作, 而且自动备援, 无需交换机辅助<br /></p>
</blockquote>

:ET
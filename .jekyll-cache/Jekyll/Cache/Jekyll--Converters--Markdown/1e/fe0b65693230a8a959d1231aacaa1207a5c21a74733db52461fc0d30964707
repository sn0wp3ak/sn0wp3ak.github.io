I"S<p>多个SQL语句的执行序列, 保证事务中多个操作要么都执行成功, 要么一个都不执行<br /></p>

<p>事务的特性:</p>
<ul>
  <li>参考笔记: <a href="/database/2020/07/09/MySQL事务的4大特性ACID.html">MySQL事务的4大特性ACID</a></li>
</ul>

<p>事务的使用:<br /></p>

<p>首先要确保表的<code class="language-plaintext highlighter-rouge">存储引擎</code>是<code class="language-plaintext highlighter-rouge">InnoDB</code>类型, 因为只有InnoDB可以使用事务, 而InnoDB也是MySQL的默认存储引擎<br /></p>

<p>存储引擎: 提供存储数据的一种机制, 引擎是以数据表为单位设置的<br /></p>

<ul>
  <li>查看MySQL数据库支持的表的存储引擎
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SHOW</span> <span class="n">ENGINES</span><span class="p">;</span>
</code></pre></div>    </div>
  </li>
</ul>

<p>常见的数据表引擎: InnoDB和MyISAM<br /></p>

<p>InnoDB支持事务; 
MyISAM不支持事务, 但是优势是访问速度快;
如果是对事务没有特别要求, 或者是以SELECT和INSERT为主的数据表都推荐使用MyISAM作为存储引擎<br /></p>

<ul>
  <li>通过建表语句判断表的引擎:
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SHOW</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="err">表</span><span class="p">;</span>
</code></pre></div>    </div>
  </li>
  <li>修改表的存储引擎:
```sql</li>
</ul>

<p>```</p>
:ET